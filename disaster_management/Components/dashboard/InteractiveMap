import React, { useState } from 'react';
import { MapContainer, TileLayer, Marker, Popup, Circle } from 'react-leaflet';
import 'leaflet/dist/leaflet.css';
import L from 'leaflet';

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  Layers, 
  Filter,
  AlertTriangle,
  MessageSquare,
  Waves,
  Anchor
} from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";
import { format } from "date-fns";

// Fix for default Leaflet icon not showing up
delete L.Icon.Default.prototype._getIconUrl;
L.Icon.Default.mergeOptions({
  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',
  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',
  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',
});

const hazardColors = {
  tsunami: "bg-red-500", storm_surge: "bg-orange-500", high_waves: "bg-blue-500",
  swell_surge: "bg-indigo-500", coastal_current: "bg-teal-500", unusual_tidal: "bg-purple-500",
  coastal_erosion: "bg-yellow-500", sea_level_rise: "bg-green-500", oil_spill: "bg-gray-800",
  marine_debris: "bg-brown-500", other: "bg-gray-500"
};

const getHazardIcon = (report) => {
  const colorClass = hazardColors[report.hazard_type] || hazardColors.other;
  const size = { low: 12, moderate: 16, high: 20, critical: 24 }[report.severity];
  
  return L.divIcon({
    html: `<div class="relative flex items-center justify-center">
             <div class="${colorClass} rounded-full" style="width: ${size}px; height: ${size}px;"></div>
             <div class="${colorClass} rounded-full absolute animate-ping-slow" style="width: ${size}px; height: ${size}px;"></div>
           </div>`,
    className: 'bg-transparent border-0',
    iconSize: [size, size],
    iconAnchor: [size/2, size/2],
  });
};

const getSocialIcon = (post) => {
  const color = {
    positive: 'text-green-500', negative: 'text-red-500', 
    panic: 'text-orange-500', neutral: 'text-blue-500', informative: 'text-blue-500'
  }[post.sentiment];
  
  return L.divIcon({
    html: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${color}"><path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z"/></svg>`,
    className: 'bg-transparent border-0',
    iconSize: [20, 20],
    iconAnchor: [10, 10],
  });
};

export default function InteractiveMap({ reports, socialData, safeZones, isLoading }) {
  const [activeLayer, setActiveLayer] = useState("reports");
  const defaultPosition = [15.9129, 79.7400]; // Center of India

  if (isLoading) {
    return (
      <Card>
        <CardHeader>
          <Skeleton className="h-6 w-40" />
        </CardHeader>
        <CardContent>
          <Skeleton className="w-full h-[500px] rounded-xl" />
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <CardTitle className="flex items-center gap-2">
            <Waves className="w-5 h-5" />
            Interactive Hazard Map
          </CardTitle>
          <div className="flex items-center gap-3">
            <Tabs value={activeLayer} onValueChange={setActiveLayer}>
              <TabsList className="bg-slate-100">
                <TabsTrigger value="reports"><AlertTriangle className="w-4 h-4 mr-1" />Hazards</TabsTrigger>
                <TabsTrigger value="safe_zones"><Anchor className="w-4 h-4 mr-1" />Safe Zones</TabsTrigger>
                <TabsTrigger value="social"><MessageSquare className="w-4 h-4 mr-1" />Social</TabsTrigger>
                <TabsTrigger value="both"><Layers className="w-4 h-4 mr-1" />All Layers</TabsTrigger>
              </TabsList>
            </Tabs>
            <Button variant="outline" size="sm"><Filter className="w-4 h-4 mr-1" />Filter</Button>
          </div>
        </div>
      </CardHeader>
      
      <CardContent>
        <div className="h-[500px] w-full rounded-xl overflow-hidden z-0">
          <MapContainer center={defaultPosition} zoom={5} scrollWheelZoom={true} style={{ height: '100%', width: '100%' }}>
            <TileLayer
              attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
              url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
            />
            
            {/* Render Hazard Reports */}
            {(activeLayer === 'reports' || activeLayer === 'both') && reports.map(report => (
              <Marker key={report.id} position={[report.latitude, report.longitude]} icon={getHazardIcon(report)}>
                <Popup>
                  <div className="font-bold">{report.title}</div>
                  <Badge className={`${hazardColors[report.hazard_type]} my-1`}>{report.hazard_type.replace(/_/g, ' ')}</Badge>
                  <div>{report.description}</div>
                  <div className="text-xs text-slate-500 mt-2">{format(new Date(report.created_date), 'PPp')}</div>
                </Popup>
              </Marker>
            ))}

            {/* Render Safe Zones */}
            {(activeLayer === 'safe_zones' || activeLayer === 'both') && safeZones.filter(z => z.status === 'active').map(zone => (
              <React.Fragment key={zone.id}>
                <Circle center={[zone.latitude, zone.longitude]} pathOptions={{ color: 'green', fillColor: 'green' }} radius={zone.radius_km * 1000}>
                  <Popup>
                    <div className="font-bold">{zone.name}</div>
                    <Badge className="bg-green-100 text-green-800 my-1">{zone.activity_type}</Badge>
                    <div>{zone.conditions}</div>
                  </Popup>
                </Circle>
                <Marker position={[zone.latitude, zone.longitude]} icon={L.divIcon({ html: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-800"><path d="M12 22V8"/><path d="M5 12H2a10 10 0 0 0 20 0h-3"/><path d="M5 12a7 7 0 0 1 14 0"/></svg>`, className: 'bg-transparent border-0' })}>
                </Marker>
              </React.Fragment>
            ))}

            {/* Render Social Media Data */}
            {(activeLayer === 'social' || activeLayer === 'both') && socialData.filter(p => p.latitude && p.longitude).map((post, i) => (
              <Marker key={i} position={[post.latitude, post.longitude]} icon={getSocialIcon(post)}>
                <Popup>
                  <div className="text-sm">{post.content}</div>
                  <a href={post.post_url} target="_blank" rel="noreferrer" className="text-blue-500 text-xs hover:underline">View Post</a>
                </Popup>
              </Marker>
            ))}
          </MapContainer>
        </div>

        <div className="mt-4 flex flex-wrap gap-2">
          <Badge variant="secondary">{reports.length} Total Reports</Badge>
          <Badge variant="secondary" className="bg-green-100 text-green-800">{safeZones.filter(z => z.status === 'active').length} Active Safe Zones</Badge>
          <Badge variant="secondary">{socialData.length} Social Mentions</Badge>
        </div>
      </CardContent>
    </Card>
  );
}